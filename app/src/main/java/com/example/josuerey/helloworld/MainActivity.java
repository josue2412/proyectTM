package com.example.josuerey.helloworld;

import android.app.ProgressDialog;
import android.content.Intent;
import android.provider.Settings;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.JsonRequest;
import com.android.volley.toolbox.Volley;
import com.example.josuerey.helloworld.domain.metadata.Metadata;
import com.example.josuerey.helloworld.domain.metadata.MetadataRepository;
import com.example.josuerey.helloworld.network.APIClient;
import com.example.josuerey.helloworld.utilidades.ExportData;

import org.json.JSONException;
import org.json.JSONObject;

public class MainActivity extends AppCompatActivity {

    public final static String METADATA_ID_PROPERTY = "metadataId";
    public final static String METADATA_PROPERTY = "metadata";
    private EditText campoNoRuta;
    private EditText campoVia;
    private EditText campoNumEcon;
    private EditText campoEncuestador;
    private MetadataRepository metadataRepository;
    private int metadataId;
    private final static String TAG = "MainActivity";
    private APIClient apiClient;
    private String androidDeviceId;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        androidDeviceId = Settings.Secure.getString(this.getContentResolver(),
                Settings.Secure.ANDROID_ID);

        Log.i(TAG, "Unique id: " + androidDeviceId);

        campoNoRuta = (EditText) findViewById(R.id.editTextRuta);
        campoVia = (EditText) findViewById(R.id.editTextVia);
        campoNumEcon = (EditText) findViewById(R.id.editTextNumEcon);
        campoEncuestador = (EditText) findViewById(R.id.editTextEnc);

        metadataRepository = new MetadataRepository(getApplication());
        apiClient = APIClient.builder().app(getApplication()).build();
    }

    public void onClick(View view){

        Intent miIntent=null;
        switch (view.getId()){

            case R.id.btnStart:
                try{
                    if (fieldsValidateSuccess()){
                        getAuthorization();
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                break;
        }
        if (miIntent!=null){
            startActivity(miIntent);
        }
    }

    private boolean fieldsValidateSuccess() {

        if (TextUtils.isEmpty(campoNoRuta.getText().toString())) {
            campoNoRuta.setError("Favor de ingresar una ruta");
            return false;
        }
        if (TextUtils.isEmpty(campoEncuestador.getText().toString())) {
            campoEncuestador.setError("Favor de ingresar un nombre");
            return false;
        }
        return true;
    }

    /**
     *
     * @return id autogenerated for the persisted row.
     */
    private Metadata saveMetadata(){

        Metadata metadata = Metadata.builder()
                .capturist(campoEncuestador.getText().toString())
                .economicNumber(campoNumEcon.getText().toString())
                .via(campoVia.getText().toString())
                .deviceId(androidDeviceId)
                .route(campoNoRuta.getText().toString()).build();

        metadataId = (int) metadataRepository.insert(metadata);

        // Create Metadata file
        ExportData.createFile(campoNoRuta.getText().toString()
                + "-" + campoNumEcon.getText().toString() + "-Recorrido-"
                + String.valueOf(metadataId) + ".txt", metadata.toString());

        metadata.setId(metadataId);
        return metadata;
    }

    private void getAuthorization() throws JSONException {

        RequestQueue queue = Volley.newRequestQueue(this);
        String userToken= "1234";
        String url ="http://u856955919.hostingerapp.com/api/user?api_token="+userToken;
        final ProgressDialog pdLoading = new ProgressDialog(this);
        pdLoading.setMessage("\tLoading...");
        pdLoading.show();

        // Request a string response from the provided URL.
        JsonRequest<JSONObject> stringRequest = new JsonObjectRequest(Request.Method.GET, url,
                null,new Response.Listener<JSONObject >() {
            @Override
            public void onResponse(JSONObject  response) {
                // Display the first 500 characters of the response string.
                Log.i(TAG, response.toString());
                try {

                    evalResponse(response);
                } catch (JSONException e) {

                    e.printStackTrace();
                }
                pdLoading.dismiss();
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Log.i(TAG, "Did not worked");
                pdLoading.dismiss();
            }
        });

        // Add the request to the RequestQueue.
        queue.add(stringRequest);
    }

    private void evalResponse(JSONObject response) throws JSONException {
        String msg;
        if (response != null) {
            String isActive = response.getString("activo");

                if (isActive.equals("1")) {
                    Metadata metadata = saveMetadata();
                    Log.i(TAG, metadata.toString());
                    apiClient.postMetadata(metadata);

                    msg = "Bienvenido " + campoEncuestador.getText().toString();
                    Intent myIntent = new Intent(MainActivity.this, TrackerActivity.class);
                    myIntent.putExtra(METADATA_ID_PROPERTY, String.valueOf(metadataId));
                    myIntent.putExtra(METADATA_PROPERTY, metadata.toString());
                    myIntent.putExtra("Route", metadata.getRoute());
                    myIntent.putExtra("econNumber", metadata.getEconomicNumber());
                    MainActivity.this.startActivity(myIntent);
                    finish();

                } else
                    msg = "You are not allowed to use this app anymore, until you pay.";

            } else {
                msg = "Unable to connect to remote server.";
            }

        Log.i(TAG, "Auth:" + msg);
        Toast.makeText(MainActivity.this, msg,
                Toast.LENGTH_SHORT).show();
    }
}
